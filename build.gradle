//apply from: "buildsystem/config.gradle"

// 配置Project的构建脚本类路径
buildscript {
    println "   The closure of use to configure the build script classpath begin run."
    apply from: 'buildsystem/config.gradle'
    def bs = buildscript
    println "   dumpBuildScript:${bs}"

    addRepos(repositories)

    dependencies { //Identifies the Android plugin
        classpath 'com.android.tools.build:gradle:3.6.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //classpath 'com.starcor.plugin:pluginrepo:1.0.0'
    }
    println "   The closure to use to configure the build script classpath end run."
}

//Configures this project and each of its sub-projects
allprojects { addRepos(repositories) }

task clean(type: Delete) {
    delete rootProject.buildDir
}

this.beforeEvaluate{
    println "   >> beforeEvaluate."
}

//this.afterEvaluatete{
//    println "   >> afterEvaluatete."
//}

project.afterEvaluate {
    logger.log(LogLevel.ERROR,"------project [${project.path}] (${project.name}) is end Evaluate.")
}

//监听task的创建
tasks.whenTaskAdded { task ->
//    task.ext.srcDir = "src/main/java"
}

//监听整个task关系图的创建
gradle.taskGraph.whenReady {
    println "----------------- On task graph ready."
}

//监听整个build完毕
gradle.buildFinished {
    println("")
    println "<<<<<<<<<<<<<<<<< All moudles build Finished!"
}

//监听某个task开始执行，结束执行
//gradle.taskGraph.addTaskExecutionListener(new TaskExecutionListener() {
//    @Override
//    void beforeExecute(Task task) {
//
//    }
//
//    @Override
//    void afterExecute(Task task, TaskState state) {
//
//    }
//})