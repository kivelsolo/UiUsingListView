apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def root_android = rootProject.ext.android
def root_dependencies = rootProject.ext.dependencies
def deps = rootProject.ext.deps
def root_test = rootProject.ext.test

android {
    compileSdkVersion root_android.compileSdkVersion
    buildToolsVersion root_android.buildToolsVersion

    defaultConfig {
        minSdkVersion root_android.minSdkVersion
        targetSdkVersion root_android.targetSdkVersion
        versionCode root_android.versionCode
        versionName root_android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    //  启用View Binding
    viewBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation test.junit
    testImplementation test.kotlinx_coroutines
    androidTestImplementation test.ext_junit
    androidTestImplementation test.espresso_core

    //网络库由Base层引出
    api project(':library-network' )

    api deps.multidex

    api deps.appcompat
    api deps.kotlin.stblib
    api deps.kotlin.reflect
    api deps.core_ktx
    api deps.activity.activity_ktx
    api deps.fragment.fragmen_ktx
    api deps.coroutines.core
    api deps.coroutines.android

    api root_dependencies["arouter"]
    kapt root_dependencies["arouter_compiler"]

    // mvvm + jetPack
    api deps.lifecycle.viewmodel_ktx
    api deps.lifecycle.livedata_ktx
    api deps.lifecycle.runtime_ktx
    api deps.lifecycle.extensions

    // Room数据库支持
    api root_dependencies["room-common"]
    api root_dependencies["room-runtime"]
    api root_dependencies["room-ktx"]
    api root_dependencies["stetho"]             // Stetho基本调试依赖

    api root_dependencies["paging-runtime-ktx"]
    api root_dependencies["recyclerView"]
    api root_dependencies["constraintLayout"]
    //    api root_dependencies["recyclerView_adapter"]
    api root_dependencies["cardView"]
    api root_dependencies["constraintLayout"]
    api root_dependencies["material"]
    api root_dependencies["gson"]

    api root_dependencies["gilde"]
    kapt root_dependencies["glide_compiler"]
    api root_dependencies["glide_okhttp3"]

    api root_dependencies["autosize"]
//    api root_dependencies["autoLayout"]  @deprecated

    debugImplementation root_dependencies["leakcanary"]

    api root_dependencies["andPermissions"]
    api root_dependencies["xxPermissions"]

    // 浸式状态栏和沉浸式导航栏管理库
    api root_dependencies["immersionbar"]
    api root_dependencies["immersionbar_fragment"]


    if(directly_use_Akangraoo.toBoolean()){
        api project(":Akangaroo")
    }else{
        api rootProject.ext.deps.myLib.Akangaroo
    }

    api 'com.elvishew:xlog:1.11.0'

    api root_dependencies["xul_cache"]

    api 'androidx.databinding:databinding-runtime:4.2.2'
}
