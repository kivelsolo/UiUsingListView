// >=Gradle 7.0 settings.gradle中设置插件仓库
pluginManagement {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public'}   //central仓和jcenter仓的聚合仓
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url "https://jitpack.io" }
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public'}   //central仓和jcenter仓的聚合仓
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url "https://jitpack.io" }
        mavenCentral()
    }
}


println("> Initialization [${DEFAULT_SETTINGS_FILE}] Start.")

include ':app'
include ':app-playerdemo'
include ':app-hlsCacheDemo'
include ':app-bannerDemo'
include ':app-Kotlin-Coroutines-Examples'
include ':module-Native'

include ':base'
include ':database'
include ':module-Common'
include ':module-Home'
include ':module-Demo'
include ':module-Login'
include ':module-Player'
include ':module-Web'
include ':module-Music'
include ':module-Eyepetizer'

def rootDir = settingsDir
// 自定义lib库Project
include ':library'
include ':library-player'
include ':library-views'
include ':library-network'
include ':library-server'
include ':library-hlscache'
include ':library-unittest'
include ':library-floatwindow'

project(':library').projectDir = new File(rootDir, 'library/all')
project(':library-player').projectDir = new File(rootDir, 'library/player')
project(':library-views').projectDir = new File(rootDir, 'library/ui')
project(':library-network').projectDir = new File(rootDir, 'library/network')
project(':library-server').projectDir = new File(rootDir, 'library/server')
project(':library-hlscache').projectDir = new File(rootDir, 'library/hlscache')
project(':library-unittest').projectDir = new File(rootDir, 'library/unitTest')
project(':library-floatwindow').projectDir = new File(rootDir, 'library/floatwindow')


include ':app-pickerview'
include ':wheelview'
project(':wheelview').projectDir = new File(rootDir, 'app-pickerview/wheelview')
include ':pickerview'
project(':pickerview').projectDir = new File(rootDir, 'app-pickerview/pickerview')
include ':calendar_picker'
project(':calendar_picker').projectDir = new File(rootDir, 'app-pickerview/calendar_picker')

if(directly_use_Akangraoo.toBoolean()){
    include ':Akangaroo'
    project(':Akangaroo').setProjectDir(file("E:\\GitHubProjects\\AKangaroo\\app"))
}


gradle.beforeProject {
    project -> println("Ready to config ===> ${project.name} ")
}

gradle.afterProject {
    println "[END Config]"
}

println("> Initialization [${DEFAULT_SETTINGS_FILE}] End.")
