println '>>>>>>>>>>>jarLib config start'

apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion "25.0.1"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def SDK_BASENAME = "TestSdk";
def SDK_VERSION = "_V1.1";
def SDK_FULLNAME = "${SDK_BASENAME}${SDK_VERSION}.jar"; //模板式字符串

def sdkDestinationPath = "build/outputs/jar/";
def jarUrl = "${sdkDestinationPath}${SDK_FULLNAME}";
def code_From = "build/intermediates/classes/release/";

task deleteBuild(type: Delete) {
    delete jarUrl;
}

task makeTestJar(dependsOn: ['compileReleaseJavaWithJavac'], type: Jar){
    delete  jarUrl
    from(code_From)
    exclude('**/R.class')
    exclude('**/R\$*.class')
    exclude('**/BuildConfig.class')
    include('com/test/jarlibrary/**/*.class')
    archiveName = SDK_FULLNAME;
    destinationDir = file(sdkDestinationPath)
//    outjars jarUrl
//    configuration 'proguard-rules.pro'// 混淆配置文件
//    from(project.zipTree("**/***.jar")) //打第三方包
}
println '>>>>>>>>>>>jarLib config End'
