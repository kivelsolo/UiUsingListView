//apply plugin，这个是Gradle工具规定的写法，意思是要使用什么插件来构建项目，
//后边跟的是插件名称，com.android.application是Google通过Gradle的api，
//使用Groovy语言编写的一个插件，用于构建Android主工程,使'android' block 中特殊指定的构建选项可用
//相当于eclipse中的ADT插件。

//如果这个模块是一个Library的话，应该引入的插件叫做'com.android.library'，
// 如果熟悉Gradle的api的话也可以写自己的插件，
// github上有许多辅助Android开发的插件，下载下来就是个jar包，可以引入AndroidStudio中，有兴趣的可以去了解一下；
apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
def keystorePropertiesFile = rootProject.file("keystore.properties")
// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Load keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


def appName_360 = "\"GreekMyth_360\""
def appName_wdj = "\"GreekMyth_WDJ\""
def appName_yd = "\"GreekMyth_YD\""
def appName_dx = "\"GreekMyth_DX\""

android {
    signingConfigs {
        ZekeSigned {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 22
    buildToolsVersion '25.0.0'

    //The default configuration, inherited by all product flavors(if any are defined)
    defaultConfig {
        applicationId 'com.kingz.customdemo'
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        signingConfig signingConfigs.ZekeSigned
        minSdkVersion 19
        targetSdkVersion 22
        buildConfigField("String", "APP_NAME", "${appName_360}")
    }
    productFlavors {
        //在创建和配置productFlavors之后SyncNow的话
        //Gradle 会根据buildTypes和productFlavors自动创建Build Variant
        //并按照 <product-flavor><Build-Type> 的格式命名这些变体。
        //例如，如果创建了“demo”和“full”这两种productFlavors并保留默认的“debug”和“release”构建类型，
        // Gradle 将创建以下构建变体：demo-debug/demo-release/full-debug/full-release
        // 可以将构建变体更改为要构建并运行的任何变体,只需转到 Build > Select Build Variant,然后从下拉菜单中选择一个变体
        // 然而,要开始自定义每个构建变体及其功能和资源,需要了解如何创建和管理源集。
        //readMore:https://developer.android.com/studio/build/build-variants.html#product-flavors
        v_360 {
            applicationIdSuffix ".qihu"
            versionNameSuffix "-360"
            buildConfigField("String", "APP_NAME", "${appName_360}")
        }
        v_wdj {
            applicationIdSuffix ".wdj"
            versionNameSuffix "-豌豆荚"
            buildConfigField("String", "APP_NAME", "${appName_wdj}")
        }
        v_yd {
            applicationIdSuffix ".yd"
            versionNameSuffix "-移动"
            buildConfigField("String", "APP_NAME", "${appName_yd}")
        }
        v_dx {
            applicationIdSuffix ".dx"
            versionNameSuffix "-电信"
            buildConfigField("String", "APP_NAME", "${appName_dx}")
        }
    }

    buildTypes {
        //buildTypes 的配置在productFlavors的基础上增加
        debug {
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.ZekeSigned
        }
        /**
         * The 'initWith' property allows you to copy configurations from other build types,
         * so you don't have to configure one from the beginning. You can then configure
         * just the settings you want to change. The following line initializes
         * 'jnidebug' using the debug build type, and changes only the
         * applicationIdSuffix and versionNameSuffix settings.
         */
        //jnidebug {
        //
        //    // This copies the debuggable attribute and debug signing configurations.
        //    initWith debug
        //
        //    applicationIdSuffix ".jnidebug"
        //    jniDebuggable true
        //}
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

//    LintOptions{
//        //http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.LintOptions.html
//    }
//    signingConfigs{
    //http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.SigningConfig.html
//    }

}

dependencies {
    //debugCompile(["jp.wasabeef:takt:1.0.1"]) 屏蔽wasabeef用于显示Fps的第三方库  reason:应用中已经自己写好了
    //Local binary dependency
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // Remote binary dependency
    //    compile 'com.android.support:support-v4:22.0.+'
    //    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.squareup.okio:okio:1.5.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    //compile 'org.testng:testng:6.9.6'
    //编译extras目录下的ShimmerAndroid模块
    //compile project(':extras:ShimmerAndroid')
    // Dependency on the "jarlibrary" module from this project
    compile project(':jarlibrary')
    //------------------- Local Unit  --------------------
    //Adds a compile time dependency for local tests. Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'
    // Optional -- Mockito framework
    testCompile 'org.mockito:mockito-core:1.10.19'
    //------------------- Local Unit  --------------------
    //Andr`oid测试支持库  适用于 Android 且与 JUnit 4 兼容的测试运行器
    androidTestCompile 'com.android.support.test:runner:0.4'
    // Set this dependency to use JUnit 4 rules
    androidTestCompile 'com.android.support.test:rules:0.4'
    // Adds a compile time dependency for the test APK.
    //    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    // Set this dependency to build and run Espresso tests : UI 测试框架:适合应用中的功能性 UI 测试
    //    androidTestCompile ('com.android.support.test.espresso:espresso-core:2.2.2'){
    //        //如果项目中有用Dagger或者Dagger2的话,不加这行会编译失败的.
    //        exclude group: 'javax.inject'
    //        exclude module: 'support-annotations'
    //        exclude module: 'support-v4'
    //        exclude module: 'support-v13'
    //        exclude module: 'recyclerview-v7'
    //        exclude module: 'appcompat-v7'
    //    }
    // Set this dependency to build and run UI Automator tests : UI 测试框架；适合跨系统和已安装应用的跨应用功能性 UI 测试
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.0'
}